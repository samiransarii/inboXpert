// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v5.28.3
// source: email_categorization_service.proto

package email_categorization_service

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Email struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string            `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Subject   string            `protobuf:"bytes,2,opt,name=subject,proto3" json:"subject,omitempty"`
	Body      string            `protobuf:"bytes,3,opt,name=body,proto3" json:"body,omitempty"`
	Sender    string            `protobuf:"bytes,4,opt,name=sender,proto3" json:"sender,omitempty"`
	Recipents []string          `protobuf:"bytes,5,rep,name=recipents,proto3" json:"recipents,omitempty"`
	Headers   map[string]string `protobuf:"bytes,6,rep,name=headers,proto3" json:"headers,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Email) Reset() {
	*x = Email{}
	mi := &file_email_categorization_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Email) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Email) ProtoMessage() {}

func (x *Email) ProtoReflect() protoreflect.Message {
	mi := &file_email_categorization_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Email.ProtoReflect.Descriptor instead.
func (*Email) Descriptor() ([]byte, []int) {
	return file_email_categorization_service_proto_rawDescGZIP(), []int{0}
}

func (x *Email) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Email) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *Email) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

func (x *Email) GetSender() string {
	if x != nil {
		return x.Sender
	}
	return ""
}

func (x *Email) GetRecipents() []string {
	if x != nil {
		return x.Recipents
	}
	return nil
}

func (x *Email) GetHeaders() map[string]string {
	if x != nil {
		return x.Headers
	}
	return nil
}

type CategoryResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EmailId         string   `protobuf:"bytes,1,opt,name=email_id,json=emailId,proto3" json:"email_id,omitempty"`
	Categories      []string `protobuf:"bytes,2,rep,name=categories,proto3" json:"categories,omitempty"`
	ConfidenceScore float32  `protobuf:"fixed32,3,opt,name=confidence_score,json=confidenceScore,proto3" json:"confidence_score,omitempty"`
	Error           string   `protobuf:"bytes,4,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *CategoryResult) Reset() {
	*x = CategoryResult{}
	mi := &file_email_categorization_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CategoryResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CategoryResult) ProtoMessage() {}

func (x *CategoryResult) ProtoReflect() protoreflect.Message {
	mi := &file_email_categorization_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CategoryResult.ProtoReflect.Descriptor instead.
func (*CategoryResult) Descriptor() ([]byte, []int) {
	return file_email_categorization_service_proto_rawDescGZIP(), []int{1}
}

func (x *CategoryResult) GetEmailId() string {
	if x != nil {
		return x.EmailId
	}
	return ""
}

func (x *CategoryResult) GetCategories() []string {
	if x != nil {
		return x.Categories
	}
	return nil
}

func (x *CategoryResult) GetConfidenceScore() float32 {
	if x != nil {
		return x.ConfidenceScore
	}
	return 0
}

func (x *CategoryResult) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type CategorizeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Emails []*Email `protobuf:"bytes,1,rep,name=emails,proto3" json:"emails,omitempty"`
}

func (x *CategorizeRequest) Reset() {
	*x = CategorizeRequest{}
	mi := &file_email_categorization_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CategorizeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CategorizeRequest) ProtoMessage() {}

func (x *CategorizeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_email_categorization_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CategorizeRequest.ProtoReflect.Descriptor instead.
func (*CategorizeRequest) Descriptor() ([]byte, []int) {
	return file_email_categorization_service_proto_rawDescGZIP(), []int{2}
}

func (x *CategorizeRequest) GetEmails() []*Email {
	if x != nil {
		return x.Emails
	}
	return nil
}

type CategorizeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results []*CategoryResult `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
}

func (x *CategorizeResponse) Reset() {
	*x = CategorizeResponse{}
	mi := &file_email_categorization_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CategorizeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CategorizeResponse) ProtoMessage() {}

func (x *CategorizeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_email_categorization_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CategorizeResponse.ProtoReflect.Descriptor instead.
func (*CategorizeResponse) Descriptor() ([]byte, []int) {
	return file_email_categorization_service_proto_rawDescGZIP(), []int{3}
}

func (x *CategorizeResponse) GetResults() []*CategoryResult {
	if x != nil {
		return x.Results
	}
	return nil
}

var File_email_categorization_service_proto protoreflect.FileDescriptor

var file_email_categorization_service_proto_rawDesc = []byte{
	0x0a, 0x22, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x11, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x22, 0xf8, 0x01, 0x0a, 0x05, 0x45, 0x6d, 0x61, 0x69,
	0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x62,
	0x6f, 0x64, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x63, 0x69, 0x70,
	0x65, 0x6e, 0x74, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x63, 0x69,
	0x70, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x3f, 0x0a, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73,
	0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6d, 0x61, 0x69, 0x6c,
	0x2e, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x68,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x1a, 0x3a, 0x0a, 0x0c, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x22, 0x8c, 0x01, 0x0a, 0x0e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x49, 0x64,
	0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73,
	0x12, 0x29, 0x0a, 0x10, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x73,
	0x63, 0x6f, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0f, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x22, 0x45, 0x0a, 0x11, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x06, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6d, 0x61, 0x69, 0x6c,
	0x52, 0x06, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x51, 0x0a, 0x12, 0x43, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b,
	0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x21, 0x2e, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x32, 0x7f, 0x0a, 0x1a, 0x45,
	0x6d, 0x61, 0x69, 0x6c, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x61, 0x0a, 0x10, 0x43, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x24, 0x2e,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69,
	0x7a, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x5b, 0x5a, 0x59,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x61, 0x6d, 0x69, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x72, 0x69, 0x69, 0x2f, 0x69, 0x6e, 0x62, 0x6f, 0x58, 0x70, 0x65, 0x72,
	0x74, 0x2f, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x67, 0x65, 0x6e, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x5f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_email_categorization_service_proto_rawDescOnce sync.Once
	file_email_categorization_service_proto_rawDescData = file_email_categorization_service_proto_rawDesc
)

func file_email_categorization_service_proto_rawDescGZIP() []byte {
	file_email_categorization_service_proto_rawDescOnce.Do(func() {
		file_email_categorization_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_email_categorization_service_proto_rawDescData)
	})
	return file_email_categorization_service_proto_rawDescData
}

var file_email_categorization_service_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_email_categorization_service_proto_goTypes = []any{
	(*Email)(nil),              // 0: email.services.v1.Email
	(*CategoryResult)(nil),     // 1: email.services.v1.CategoryResult
	(*CategorizeRequest)(nil),  // 2: email.services.v1.CategorizeRequest
	(*CategorizeResponse)(nil), // 3: email.services.v1.CategorizeResponse
	nil,                        // 4: email.services.v1.Email.HeadersEntry
}
var file_email_categorization_service_proto_depIdxs = []int32{
	4, // 0: email.services.v1.Email.headers:type_name -> email.services.v1.Email.HeadersEntry
	0, // 1: email.services.v1.CategorizeRequest.emails:type_name -> email.services.v1.Email
	1, // 2: email.services.v1.CategorizeResponse.results:type_name -> email.services.v1.CategoryResult
	2, // 3: email.services.v1.EmailCategorizationService.CategorizeEmails:input_type -> email.services.v1.CategorizeRequest
	3, // 4: email.services.v1.EmailCategorizationService.CategorizeEmails:output_type -> email.services.v1.CategorizeResponse
	4, // [4:5] is the sub-list for method output_type
	3, // [3:4] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_email_categorization_service_proto_init() }
func file_email_categorization_service_proto_init() {
	if File_email_categorization_service_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_email_categorization_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_email_categorization_service_proto_goTypes,
		DependencyIndexes: file_email_categorization_service_proto_depIdxs,
		MessageInfos:      file_email_categorization_service_proto_msgTypes,
	}.Build()
	File_email_categorization_service_proto = out.File
	file_email_categorization_service_proto_rawDesc = nil
	file_email_categorization_service_proto_goTypes = nil
	file_email_categorization_service_proto_depIdxs = nil
}
