// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v5.28.3
// source: ml_message.proto

package ml_server

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EmailRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string            `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Subject    string            `protobuf:"bytes,2,opt,name=subject,proto3" json:"subject,omitempty"`
	Body       string            `protobuf:"bytes,3,opt,name=body,proto3" json:"body,omitempty"`
	Sender     string            `protobuf:"bytes,4,opt,name=sender,proto3" json:"sender,omitempty"`
	Recipients []string          `protobuf:"bytes,5,rep,name=recipients,proto3" json:"recipients,omitempty"`
	Headers    map[string]string `protobuf:"bytes,6,rep,name=headers,proto3" json:"headers,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *EmailRequest) Reset() {
	*x = EmailRequest{}
	mi := &file_ml_message_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EmailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmailRequest) ProtoMessage() {}

func (x *EmailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ml_message_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmailRequest.ProtoReflect.Descriptor instead.
func (*EmailRequest) Descriptor() ([]byte, []int) {
	return file_ml_message_proto_rawDescGZIP(), []int{0}
}

func (x *EmailRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *EmailRequest) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *EmailRequest) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

func (x *EmailRequest) GetSender() string {
	if x != nil {
		return x.Sender
	}
	return ""
}

func (x *EmailRequest) GetRecipients() []string {
	if x != nil {
		return x.Recipients
	}
	return nil
}

func (x *EmailRequest) GetHeaders() map[string]string {
	if x != nil {
		return x.Headers
	}
	return nil
}

type BatchEmailRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Emails []*EmailRequest `protobuf:"bytes,1,rep,name=emails,proto3" json:"emails,omitempty"`
}

func (x *BatchEmailRequest) Reset() {
	*x = BatchEmailRequest{}
	mi := &file_ml_message_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchEmailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchEmailRequest) ProtoMessage() {}

func (x *BatchEmailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ml_message_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchEmailRequest.ProtoReflect.Descriptor instead.
func (*BatchEmailRequest) Descriptor() ([]byte, []int) {
	return file_ml_message_proto_rawDescGZIP(), []int{1}
}

func (x *BatchEmailRequest) GetEmails() []*EmailRequest {
	if x != nil {
		return x.Emails
	}
	return nil
}

type CategoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EmailId      string                 `protobuf:"bytes,1,opt,name=email_id,json=emailId,proto3" json:"email_id,omitempty"`
	Category     string                 `protobuf:"bytes,2,opt,name=category,proto3" json:"category,omitempty"`
	Confidence   float32                `protobuf:"fixed32,3,opt,name=confidence,proto3" json:"confidence,omitempty"`
	Keywords     []string               `protobuf:"bytes,4,rep,name=keywords,proto3" json:"keywords,omitempty"`
	Alternatives []*AlternativeCategory `protobuf:"bytes,5,rep,name=alternatives,proto3" json:"alternatives,omitempty"`
}

func (x *CategoryResponse) Reset() {
	*x = CategoryResponse{}
	mi := &file_ml_message_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CategoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CategoryResponse) ProtoMessage() {}

func (x *CategoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ml_message_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CategoryResponse.ProtoReflect.Descriptor instead.
func (*CategoryResponse) Descriptor() ([]byte, []int) {
	return file_ml_message_proto_rawDescGZIP(), []int{2}
}

func (x *CategoryResponse) GetEmailId() string {
	if x != nil {
		return x.EmailId
	}
	return ""
}

func (x *CategoryResponse) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *CategoryResponse) GetConfidence() float32 {
	if x != nil {
		return x.Confidence
	}
	return 0
}

func (x *CategoryResponse) GetKeywords() []string {
	if x != nil {
		return x.Keywords
	}
	return nil
}

func (x *CategoryResponse) GetAlternatives() []*AlternativeCategory {
	if x != nil {
		return x.Alternatives
	}
	return nil
}

type BatchCategoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results []*CategoryResponse `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
}

func (x *BatchCategoryResponse) Reset() {
	*x = BatchCategoryResponse{}
	mi := &file_ml_message_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchCategoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchCategoryResponse) ProtoMessage() {}

func (x *BatchCategoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ml_message_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchCategoryResponse.ProtoReflect.Descriptor instead.
func (*BatchCategoryResponse) Descriptor() ([]byte, []int) {
	return file_ml_message_proto_rawDescGZIP(), []int{3}
}

func (x *BatchCategoryResponse) GetResults() []*CategoryResponse {
	if x != nil {
		return x.Results
	}
	return nil
}

type AlternativeCategory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Category    string  `protobuf:"bytes,1,opt,name=category,proto3" json:"category,omitempty"`
	Confindence float32 `protobuf:"fixed32,2,opt,name=confindence,proto3" json:"confindence,omitempty"`
}

func (x *AlternativeCategory) Reset() {
	*x = AlternativeCategory{}
	mi := &file_ml_message_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AlternativeCategory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlternativeCategory) ProtoMessage() {}

func (x *AlternativeCategory) ProtoReflect() protoreflect.Message {
	mi := &file_ml_message_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlternativeCategory.ProtoReflect.Descriptor instead.
func (*AlternativeCategory) Descriptor() ([]byte, []int) {
	return file_ml_message_proto_rawDescGZIP(), []int{4}
}

func (x *AlternativeCategory) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *AlternativeCategory) GetConfindence() float32 {
	if x != nil {
		return x.Confindence
	}
	return 0
}

var File_ml_message_proto protoreflect.FileDescriptor

var file_ml_message_proto_rawDesc = []byte{
	0x0a, 0x10, 0x6d, 0x6c, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x14, 0x69, 0x6e, 0x62, 0x6f, 0x78, 0x70, 0x65, 0x72, 0x74, 0x2e, 0x6d, 0x6c,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x22, 0x8b, 0x02, 0x0a, 0x0c, 0x45, 0x6d, 0x61,
	0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65,
	0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12,
	0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x05, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x12,
	0x49, 0x0a, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x2f, 0x2e, 0x69, 0x6e, 0x62, 0x6f, 0x78, 0x70, 0x65, 0x72, 0x74, 0x2e, 0x6d, 0x6c, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x2e, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x1a, 0x3a, 0x0a, 0x0c, 0x48, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x4f, 0x0a, 0x11, 0x42, 0x61, 0x74, 0x63, 0x68, 0x45,
	0x6d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3a, 0x0a, 0x06, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x69, 0x6e,
	0x62, 0x6f, 0x78, 0x70, 0x65, 0x72, 0x74, 0x2e, 0x6d, 0x6c, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52,
	0x06, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x73, 0x22, 0xd4, 0x01, 0x0a, 0x10, 0x43, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x19, 0x0a, 0x08,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x64, 0x65, 0x6e, 0x63,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x64, 0x65,
	0x6e, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x12,
	0x4d, 0x0a, 0x0c, 0x61, 0x6c, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x73, 0x18,
	0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x69, 0x6e, 0x62, 0x6f, 0x78, 0x70, 0x65, 0x72,
	0x74, 0x2e, 0x6d, 0x6c, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x41, 0x6c, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x52, 0x0c, 0x61, 0x6c, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x73, 0x22, 0x59,
	0x0a, 0x15, 0x42, 0x61, 0x74, 0x63, 0x68, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x69, 0x6e, 0x62, 0x6f, 0x78,
	0x70, 0x65, 0x72, 0x74, 0x2e, 0x6d, 0x6c, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x22, 0x53, 0x0a, 0x13, 0x41, 0x6c, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x20, 0x0a, 0x0b,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x42, 0x3d,
	0x5a, 0x3b, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x61, 0x6d,
	0x69, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x72, 0x69, 0x69, 0x2f, 0x69, 0x6e, 0x62, 0x6f, 0x58, 0x70,
	0x65, 0x72, 0x74, 0x2f, 0x67, 0x6f, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2f, 0x6d, 0x6c, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_ml_message_proto_rawDescOnce sync.Once
	file_ml_message_proto_rawDescData = file_ml_message_proto_rawDesc
)

func file_ml_message_proto_rawDescGZIP() []byte {
	file_ml_message_proto_rawDescOnce.Do(func() {
		file_ml_message_proto_rawDescData = protoimpl.X.CompressGZIP(file_ml_message_proto_rawDescData)
	})
	return file_ml_message_proto_rawDescData
}

var file_ml_message_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_ml_message_proto_goTypes = []any{
	(*EmailRequest)(nil),          // 0: inboxpert.ml.service.EmailRequest
	(*BatchEmailRequest)(nil),     // 1: inboxpert.ml.service.BatchEmailRequest
	(*CategoryResponse)(nil),      // 2: inboxpert.ml.service.CategoryResponse
	(*BatchCategoryResponse)(nil), // 3: inboxpert.ml.service.BatchCategoryResponse
	(*AlternativeCategory)(nil),   // 4: inboxpert.ml.service.AlternativeCategory
	nil,                           // 5: inboxpert.ml.service.EmailRequest.HeadersEntry
}
var file_ml_message_proto_depIdxs = []int32{
	5, // 0: inboxpert.ml.service.EmailRequest.headers:type_name -> inboxpert.ml.service.EmailRequest.HeadersEntry
	0, // 1: inboxpert.ml.service.BatchEmailRequest.emails:type_name -> inboxpert.ml.service.EmailRequest
	4, // 2: inboxpert.ml.service.CategoryResponse.alternatives:type_name -> inboxpert.ml.service.AlternativeCategory
	2, // 3: inboxpert.ml.service.BatchCategoryResponse.results:type_name -> inboxpert.ml.service.CategoryResponse
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_ml_message_proto_init() }
func file_ml_message_proto_init() {
	if File_ml_message_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ml_message_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_ml_message_proto_goTypes,
		DependencyIndexes: file_ml_message_proto_depIdxs,
		MessageInfos:      file_ml_message_proto_msgTypes,
	}.Build()
	File_ml_message_proto = out.File
	file_ml_message_proto_rawDesc = nil
	file_ml_message_proto_goTypes = nil
	file_ml_message_proto_depIdxs = nil
}
